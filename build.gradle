apply plugin: 'android'

buildscript {
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:1.0.0'
//    }
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

//<uses-sdk
//android:minSdkVersion="8"
//android:targetSdkVersion="17" />
android {

    compileSdkVersion 19
    buildToolsVersion "25.0.0"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        sourceSets {
            main() {
                jniLibs.srcDirs = ['libs']
            }
        }
        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    dependencies {
        compile fileTree(dir: 'libs', include: '*.jar')
    }

}
