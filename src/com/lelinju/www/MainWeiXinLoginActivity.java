package com.lelinju.www;import java.io.File;import java.io.UnsupportedEncodingException;import org.apache.http.Header;import org.json.JSONException;import org.json.JSONObject;import android.app.Activity;import android.app.ActivityManager;import android.content.Context;import android.graphics.Bitmap;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.android.hengyu.web.Constants;import com.android.hengyu.web.RealmName;import com.ctrip.openapi.java.utils.HttpUtil;import com.example.taobaohead.headview.RoundImageView;import com.google.gson.Gson;import com.hengyushop.demo.at.AsyncHttp;import com.hengyushop.demo.my.JuFaFaUserActivity;import com.hengyushop.entity.UserRegisterllData;import com.hengyushop.entity.WeiXinBean;import com.hengyushop.entity.WeixinUserInfoBean;import com.loopj.android.http.AsyncHttpClient;import com.loopj.android.http.AsyncHttpResponseHandler;import com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache;import com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;import com.nostra13.universalimageloader.core.assist.QueueProcessingType;import com.tencent.mm.sdk.modelmsg.SendAuth;import com.tencent.mm.sdk.openapi.IWXAPI;import com.tencent.mm.sdk.openapi.WXAPIFactory;import com.lelinju.www.R;public class MainWeiXinLoginActivity extends Activity implements OnClickListener{	private Button mButton;	private TextView mTextView;	private ImageView mImageView;	public static IWXAPI mWxApi;	//	private static String WX_APP_ID = "wx3864f55d55968c87";	public static String WX_CODE = "";	private static String WX_SECRET = "d4624c36b6795d1d99dcf0547af5443d";	private  String nickname = "";	private  String headimgurl = "";	private Bitmap mBitmap;	private ImageLoader mImageLoader;	public static boolean isWXLogin = false;	RoundImageView networkImage;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_weixin_main);		mWxApi = WXAPIFactory.createWXAPI(this, Constants.APP_ID, true);		mWxApi.registerApp(Constants.APP_ID);		mButton = (Button)findViewById(R.id.button);		mButton.setOnClickListener(this);		mTextView = (TextView)findViewById(R.id.textview);		mImageView = (ImageView)findViewById(R.id.imageview);		networkImage = (RoundImageView) findViewById(R.id.roundImage_network);	}	@Override	protected void onResume() {		super.onResume();		if (isWXLogin) {			System.out.println("2------------------"+WX_CODE);//			Toast.makeText(this, "微信code??"+WX_CODE+"/", 1000).show();//			mTextView.setText(WX_CODE);//			loadWXUserInfo();			userxinxi();//			getWeiXinInfo(WX_CODE);		}	}	public void userxinxi(){		try{			String accessTokenUrl = "https://api.weixin.qq.com/sns/oauth2/access_token?appid="					+ Constants.APP_ID + "&secret=" + Constants.APP_SECRET + "&code=" + WX_CODE +					"&grant_type=authorization_code";//			Toast.makeText(MainWeiXinLoginActivity.this, accessTokenUrl, 100000).show();//			String strUrlone = RealmName.REALM_NAME_LL + "/get_user_model?username="+user_name+"";			System.out.println("======11============="+accessTokenUrl);			AsyncHttp.get(accessTokenUrl, new AsyncHttpResponseHandler() {				public void onSuccess(int arg0, String arg1) {					System.out.println("======输出============="+arg1);//					Toast.makeText(MainWeiXinLoginActivity.this, "数据??+"+arg1, 400).show();					try {						JSONObject object = new JSONObject(arg1);						String access_token = object.getString("access_token");						String openid = object.getString("openid");//						mTextView.setText(arg1);//						String status = object.getString("nickname");//						JSONObject obj = object.getJSONObject("data");//						if (status.equals("y")) {//						}else{////						}						userxinxill(access_token,openid);					} catch (JSONException e) {						// TODO Auto-generated catch block						e.printStackTrace();					}				};			}, MainWeiXinLoginActivity.this);		} catch (Exception e) {			// TODO: handle exception			e.printStackTrace();		}	}	public void userxinxill(String ACCESS_TOKEN, String openid){		try{			String accessTokenUrl = "https://api.weixin.qq.com/sns/userinfo?access_token="+ACCESS_TOKEN+"&openid="+openid+"";//			Toast.makeText(MainWeiXinLoginActivity.this, accessTokenUrl, 100000).show();			System.out.println("======11============="+accessTokenUrl);			AsyncHttp.get(accessTokenUrl, new AsyncHttpResponseHandler() {				public void onSuccess(int arg0, String arg1) {					System.out.println("======输出============="+arg1);//					Toast.makeText(MainWeiXinLoginActivity.this, "数据2??+"+arg1, 400).show();					try {						JSONObject object = new JSONObject(arg1);						String nickname = object.getString("nickname");						String headimgurl = object.getString("headimgurl");//						mBitmap = HttpUtil.getBitmapFromURL(headimgurl);						mTextView.setText(arg1);						Toast.makeText(MainWeiXinLoginActivity.this, headimgurl, 400).show();//						mImageView.setImageBitmap(mBitmap);						mImageLoader = initImageLoader(MainWeiXinLoginActivity.this, mImageLoader, "test");//						imageLoader.displayImage(RealmName.REALM_NAME_FTP +data.avatar, img_head);						mImageLoader.displayImage(headimgurl,networkImage);//						if (status.equals("y")) {//						}else{////						}					} catch (JSONException e) {						// TODO Auto-generated catch block						e.printStackTrace();					}					isWXLogin = false;				};			}, MainWeiXinLoginActivity.this);		} catch (Exception e) {			// TODO: handle exception			e.printStackTrace();		}	}	/**	 * 初始化图片下载器，图片缓存地??<i>("/Android/data/[app_package_name]/cache/dirName")</i>	 */	public ImageLoader initImageLoader(Context context,									   ImageLoader imageLoader, String dirName) {		imageLoader = ImageLoader.getInstance();		if (imageLoader.isInited()) {			imageLoader.destroy();		}		imageLoader.init(initImageLoaderConfig(context, dirName));		return imageLoader;	}	/**	 * 配置图片下载??	 *	 * @param dirName	 *            文件??	 */	private ImageLoaderConfiguration initImageLoaderConfig(			Context context, String dirName) {		ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(				context).threadPriority(Thread.NORM_PRIORITY - 2)				.threadPoolSize(3).memoryCacheSize(getMemoryCacheSize(context))				.denyCacheImageMultipleSizesInMemory()				.discCacheFileNameGenerator(new Md5FileNameGenerator())				.discCache(new UnlimitedDiscCache(new File(dirName)))				.tasksProcessingOrder(QueueProcessingType.LIFO).build();		return config;	}	private int getMemoryCacheSize(Context context) {		int memoryCacheSize;		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ECLAIR) {			int memClass = ((ActivityManager) context					.getSystemService(Context.ACTIVITY_SERVICE))					.getMemoryClass();			memoryCacheSize = (memClass / 8) * 1024 * 1024; // 1/8 of app memory			// limit		} else {			memoryCacheSize = 2 * 1024 * 1024;		}		return memoryCacheSize;	}	private final String TAG = "MainActivity";	private void loadWXUserInfo() {//    	new Thread(new Runnable() {//			@Override//			public void run() {		String accessTokenUrl = "https://api.weixin.qq.com/sns/oauth2/access_token?appid="				+ Constants.APP_ID + "&secret=" + Constants.APP_SECRET + "&code=" + WX_CODE +				"&grant_type=authorization_code";		Toast.makeText(MainWeiXinLoginActivity.this, accessTokenUrl, 100000).show();		String tokenResult = HttpUtil.httpsGet(accessTokenUrl);		//tokenResult存在则获取acess_token，openid，然后再次请求http，获得用户的信息//				Toast.makeText(MainWeiXinLoginActivity.this, "数据??+"+tokenResult, 1000).show();		if (null != tokenResult) {			Toast.makeText(MainWeiXinLoginActivity.this, "100", 400).show();			Gson gson = new Gson();			WeiXinBean bean = gson.fromJson(tokenResult, WeiXinBean.class);			Log.d(TAG,"############"+bean.toString());			//获取用户信息的json字符??			String userUrl ="https://api.weixin.qq.com/sns/userinfo?access_token="+bean.getAccess_token()+"&openid="+bean.getOpenid();			String wxUserInfo = HttpUtil.httpsGet(userUrl);			Log.d(TAG,"############"+wxUserInfo);			Toast.makeText(MainWeiXinLoginActivity.this, wxUserInfo, 400).show();			//解析成bean			WeixinUserInfoBean userInfoBean = gson.fromJson(wxUserInfo, WeixinUserInfoBean.class);			//微信的昵称和头像			nickname = userInfoBean.getNickname();			Toast.makeText(MainWeiXinLoginActivity.this, nickname, 200).show();			headimgurl = userInfoBean.getHeadimgurl();			Log.d(TAG,"############"+nickname);			Log.d(TAG,"############"+headimgurl);			Toast.makeText(MainWeiXinLoginActivity.this, headimgurl, 200).show();			mBitmap = HttpUtil.getBitmapFromURL(headimgurl);			Message msg = new Message();			Bundle mBundle = new Bundle();			mBundle.putString("nickname", nickname);			msg.obj = mBundle;			msg.what = 1;			mHandler.sendMessage(msg);		}//			}//		}).start();		isWXLogin = false;	}	Handler mHandler = new Handler(){		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {				case 1:					Bundle reBundle = (Bundle)msg.obj;					String mWxNameCode = reBundle.getString("nickname", "0").toString();					try {						String mWxName = new String(mWxNameCode.getBytes("ISO-8859-1"),"UTF-8");						System.out.println("mWxName==================="+mWxName);//					Toast.makeText(this, mWxName, 200).show();						mTextView.setText(mWxName);					} catch (UnsupportedEncodingException e) {						e.printStackTrace();					}					System.out.println("mBitmap==================="+mBitmap);					mImageView.setImageBitmap(mBitmap);					break;				default:					break;			}		}	};	@Override	public boolean onCreateOptionsMenu(Menu menu) {		getMenuInflater().inflate(R.menu.main, menu);		return true;	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		int id = item.getItemId();		if (id == R.id.action_settings) {			return true;		}		return super.onOptionsItemSelected(item);	}	@Override	public void onClick(View v) {		switch (v.getId()) {			case R.id.button:				isWXLogin = true;				SendAuth.Req req = new SendAuth.Req();				req.scope = "snsapi_userinfo";				req.state = "wechat_sdk_demo";				mWxApi.sendReq(req);				break;			default:				break;		}	}}